apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: applicationpromotionruns.appstudio.redhat.com
spec:
  group: appstudio.redhat.com
  names:
    kind: ApplicationPromotionRun
    listKind: ApplicationPromotionRunList
    plural: applicationpromotionruns
    singular: applicationpromotionrun
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ApplicationPromotionRun is the Schema for the applicationpromotionruns API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ApplicationPromotionRunSpec defines the desired state of ApplicationPromotionRun
            properties:
              application:
                description: Application is the name of an Application resource defined within the namespaced, and which is the target of the promotion
                type: string
              automatedPromotion:
                description: 'AutomatedPromotion is for fields specific to automated promotion Only one field should be defined: either ''manualPromotion'' or ''automatedPromotion'', but not both.'
                properties:
                  initialEnvironment:
                    description: 'InitialEnvironment: start iterating through the digraph, beginning with the value specified in ''initialEnvironment'''
                    type: string
                required:
                - initialEnvironment
                type: object
              manualPromotion:
                description: 'ManualPromotion is for fields specific to manual promotion. Only one field should be defined: either ''manualPromotion'' or ''automatedPromotion'', but not both.'
                properties:
                  targetEnvironment:
                    description: TargetEnvironment is the environment to promote to
                    type: string
                required:
                - targetEnvironment
                type: object
              snapshot:
                description: Snapshot refers to the name of a Snapshot resource defined within the namespace, used to promote container images between Environments.
                type: string
            required:
            - application
            - snapshot
            type: object
          status:
            description: ApplicationPromotionRunStatus defines the observed state of ApplicationPromotionRun
            properties:
              activeBindings:
                description: 'ActiveBindings is the list of active bindings currently being promoted to: - For an automated promotion, there can be multiple active bindings at a time (one for each env at a particular tree depth) - For a manual promotion, there will be only one.'
                items:
                  type: string
                type: array
              completionResult:
                description: CompletionResult indicates success/failure once the promotion has completed all work. CompletionResult will only have a value if State field is 'Complete'.
                type: string
              environmentStatus:
                description: EnvironmentStatus represents the set of steps taken during the  current promotion
                items:
                  description: 'PromotionRunEnvironmentStatus represents the set of steps taken during the  current promotion: - manual promotions will only have a single step. - automated promotions may have one or more steps, depending on how many environments have been promoted to.'
                  properties:
                    environmentName:
                      description: EnvironmentName is the name of the environment that was promoted to in this step
                      type: string
                    status:
                      description: Status is/was the result of promoting to that environment.
                      type: string
                    step:
                      description: 'Step is the # number of the step in the slice, starting with 1'
                      type: integer
                  required:
                  - environmentName
                  - status
                  - step
                  type: object
                type: array
              state:
                description: State indicates whether or not the overall promotion (either manual or automated is complete)
                type: string
            required:
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: applicationsnapshotenvironmentbindings.appstudio.redhat.com
spec:
  group: appstudio.redhat.com
  names:
    kind: ApplicationSnapshotEnvironmentBinding
    listKind: ApplicationSnapshotEnvironmentBindingList
    plural: applicationsnapshotenvironmentbindings
    singular: applicationsnapshotenvironmentbinding
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ApplicationSnapshotEnvironmentBinding is the Schema for the applicationsnapshotenvironmentbindings API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ApplicationSnapshotEnvironmentBindingSpec defines the desired state of ApplicationSnapshotEnvironmentBinding
            properties:
              application:
                description: Application is a reference to the Application resource (defined in the namespace) involved in the binding
                type: string
              components:
                description: Components contains individual component data
                items:
                  description: BindingComponent contains individual component data
                  properties:
                    configuration:
                      description: Configuration describes GitOps repository customizations that are specific to the the component-application-environment combination. - Values defined in this struct will overwrite values from Application/Environment/Component
                      properties:
                        env:
                          description: Env describes environment variables to use for the component
                          items:
                            description: EnvVarPair describes environment variables to use for the component
                            properties:
                              name:
                                description: Name is the environment variable name
                                type: string
                              value:
                                description: Value is the environment variable value
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        replicas:
                          description: Replicas defines the number of replicas to use for the component
                          type: integer
                        resources:
                          description: Resources defines the Compute Resources required by the component
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                      required:
                      - replicas
                      type: object
                    gitopsRepository:
                      description: GitOpsRepository contains the Git URL, path, and branch, for the component
                      properties:
                        branch:
                          description: Branch is the branch to use when accessing the GitOps repository
                          type: string
                        path:
                          description: 'Path is a pointer to a folder in the GitOps repo, containing a kustomization.yaml NOTE: Each component-env combination must have it''s own separate path'
                          type: string
                        url:
                          description: URL is the Git repository URL e.g. The Git repository that contains the K8s resources to deployment for the component of the application.
                          type: string
                      required:
                      - branch
                      - path
                      - url
                      type: object
                    name:
                      description: Name is the name of the component.
                      type: string
                  required:
                  - gitopsRepository
                  - name
                  type: object
                type: array
              environment:
                description: Environment is the Environment resource (defined in the namespace) that the binding will deploy to
                type: string
              snapshot:
                description: Snapshot is the Snapshot resource (defined in the namespae) that contains the container image versions for the components of the Application
                type: string
            required:
            - application
            - components
            - environment
            - snapshot
            type: object
          status:
            description: ApplicationSnapshotEnvironmentBindingStatus defines the observed state of ApplicationSnapshotEnvironmentBinding
            properties:
              gitopsDeployments:
                description: GitOpsDeployments describes the set of GitOpsDeployment resources that correspond to the binding. To determine the health/sync status of a binding, you can look at the GitOpsDeployments decribed here.
                items:
                  description: "BindingStatusGitOpsDeployment describes an individual reference to a GitOpsDeployment resources that is used to deploy this binding. \n To determine the health/sync status of a binding, you can look at the GitOpsDeployments decribed here."
                  properties:
                    componentName:
                      description: ComponentName is the name of the component in the (component, gitopsdeployment) pair
                      type: string
                    gitopsDeployment:
                      description: GitOpsDeployment is a reference to the name of a GitOpsDeployment resource which is used to deploy the binding. The Health/sync status for the binding can thus be read from the references GitOpsDEployment
                      type: string
                  required:
                  - componentName
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: applicationsnapshots.appstudio.redhat.com
spec:
  group: appstudio.redhat.com
  names:
    kind: ApplicationSnapshot
    listKind: ApplicationSnapshotList
    plural: applicationsnapshots
    singular: applicationsnapshot
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ApplicationSnapshot is the Schema for the applicationsnapshots API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ApplicationSnapshotSpec defines the desired state of ApplicationSnapshot
            properties:
              artifacts:
                description: Artifacts is a placeholder section for 'artifact links' we want to maintain to other AppStudio resources. See Environment API doc for details.
                properties:
                  unstableFields:
                    description: 'NOTE: This field (and struct) are placeholders. - Until this API is stabilized, consumers of the API may store any unstructured JSON/YAML data here, but no backwards compatibility will be preserved.'
                    x-kubernetes-preserve-unknown-fields: true
                type: object
              components:
                description: Components field contains the sets of components to deploy as part of this snapshot.
                items:
                  description: ApplicationSnapshotComponent
                  properties:
                    containerImage:
                      description: ContainerImage is the container image to use when deploying the component, as part of a Snapshot
                      type: string
                    name:
                      description: Name is the name of the component
                      type: string
                  required:
                  - containerImage
                  - name
                  type: object
                type: array
              displayDescription:
                description: DisplayDescription is a user-visible, user definable description for the resource (and is not used for any functional behaviour)
                type: string
              displayName:
                description: DisplayName is a user-visible, user-definable name for the resource (and is not used for any functional behaviour)
                type: string
            type: object
          status:
            description: ApplicationSnapshotStatus defines the observed state of ApplicationSnapshot
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: environments.appstudio.redhat.com
spec:
  group: appstudio.redhat.com
  names:
    kind: Environment
    listKind: EnvironmentList
    plural: environments
    singular: environment
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Environment is the Schema for the environments API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: EnvironmentSpec defines the desired state of Environment
            properties:
              configuration:
                description: Configuration contains environment-specific details for Applications/Components that are deployed to the Environment.
                properties:
                  env:
                    description: Env is an array of standard environment vairables
                    items:
                      description: EnvVarPair describes environment variables to use for the component
                      properties:
                        name:
                          description: Name is the environment variable name
                          type: string
                        value:
                          description: Value is the environment variable value
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                required:
                - env
                type: object
              deploymentStrategy:
                description: DeploymentStrategy is the promotion strategy for the Environment See Environment API doc for details.
                type: string
              displayName:
                description: DisplayName is the user-visible, user-definable name for the environment (but not used for functional requirements)
                type: string
              parentEnvironment:
                description: 'ParentEnvironment references another Environment defined in the namespace: when automated promotion is enabled, promotions to the parent environment will cause this environment to be promoted to. See Environment API doc for details.'
                type: string
              tags:
                description: Tags are a user-visisble, user-definable set of tags that can be applied to the environment
                items:
                  type: string
                type: array
              type:
                description: Type is whether the Environment is a POC or non-POC environment
                type: string
            required:
            - deploymentStrategy
            - displayName
            - type
            type: object
          status:
            description: EnvironmentStatus defines the observed state of Environment
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
