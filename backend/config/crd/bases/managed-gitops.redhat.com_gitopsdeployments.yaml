
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  name: gitopsdeployments.managed-gitops.redhat.com
spec:
  group: managed-gitops.redhat.com
  names:
    kind: GitOpsDeployment
    listKind: GitOpsDeploymentList
    plural: gitopsdeployments
    singular: gitopsdeployment
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GitOpsDeployment is the Schema for the gitopsdeployments API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GitOpsDeploymentSpec defines the desired state of GitOpsDeployment
            properties:
              destination:
                description: Destination is a reference to the target Kubernetes server
                  and namespace
                properties:
                  namespace:
                    description: The namespace will only be set for namespace-scoped
                      resources that have not set a value for .metadata.namespace
                    type: string
                type: object
              source:
                description: ApplicationSource contains all required information about
                  the source of an application
                properties:
                  path:
                    description: Path is a directory path within the Git repository,
                      and is only valid for applications sourced from Git.
                    type: string
                  repoURL:
                    description: RepoURL is the URL to the repository (Git or Helm)
                      that contains the application manifests
                    type: string
                  targetRevision:
                    description: TargetRevision defines the revision of the source
                      to sync the application to. In case of Git, this can be commit,
                      tag, or branch. If omitted, will equal to HEAD. In case of Helm,
                      this is a semver tag for the Chart's version.
                    type: string
                required:
                - repoURL
                type: object
              type:
                type: string
            required:
            - source
            - type
            type: object
          status:
            description: GitOpsDeploymentStatus defines the observed state of GitOpsDeployment
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
