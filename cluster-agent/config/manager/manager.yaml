# apiVersion: v1
# kind: Namespace
# metadata:
#   labels:
#     control-plane: controller-manager
#   name: system
# ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: cluster-agent-controller-manager
spec:
  selector:
    matchLabels:
      control-plane: cluster-agent-controller-manager
  replicas: 1
  template:
    metadata:
      labels:
        control-plane: cluster-agent-controller-manager
    spec:
      securityContext:
        runAsNonRoot: true
      containers:
      - command:
        - gitops-service-cluster-agent
        args:
        - --health-probe-bind-address=:8083
        - --metrics-bind-address=:8080
        - --leader-elect
        - --zap-time-encoding=rfc3339nano
        ports:
          - containerPort: 8080
            name: http-metrics
        env:
        - name: ARGO_CD_NAMESPACE
          value: gitops-service-argocd
        - name: DB_ADDR
          value: gitops-postgresql-staging
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              key: postgresql-password
              name: gitops-postgresql-staging
        image: ${COMMON_IMAGE}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8083
          initialDelaySeconds: 25
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8083
          initialDelaySeconds: 25
          periodSeconds: 10
        resources:
          limits:
            cpu: 300m
            memory: 1000Mi
          requests:
            cpu: 200m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - emptyDir: {}
        name: tmp
